plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1' //um Fat-Jar mit allen Dependendies zu erzeugen
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    // Generate a sources JAR alongside the main JAR
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation project(':playwright-adapter')
    implementation project(':playwright-java')

    implementation project(':wd4j')

    implementation 'ch.qos.logback:logback-classic:1.2.11' // letzte Java 8-kompatible Version
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.1'

    // Für JSON-Mapper: Finden der Wrapper-Implementierer (kann auch mit einer Klassenliste ersetzt werden)
    implementation 'org.reflections:reflections:0.10.2'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:3.12.4'

    implementation 'org.slf4j:slf4j-api:1.7.36'  // SLF4J API für Java 8
    implementation 'ch.qos.logback:logback-classic:1.2.11'  // Logback als Implementierung

    // Windows Key Store
    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation 'net.java.dev.jna:jna-platform:5.13.0'

    // otp auth
    implementation 'com.warrenstrange:googleauth:1.4.0'

    // pdf Erzeugung
    implementation 'org.apache.pdfbox:pdfbox:2.0.27' // Letzte Version mit Java 8-Support

    // JavaScript
    implementation 'com.fifesoft:rsyntaxtextarea:3.3.3'
    implementation 'org.graalvm.js:js:22.3.0'

    // JSON
    implementation 'com.google.code.gson:gson:2.10.1'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'de.bund.zrb.Main' // Die Main-Klasse, die gestartet werden soll
        )
    }
}